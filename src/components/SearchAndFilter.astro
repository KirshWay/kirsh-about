---
import { Status } from '@/types';

import type { ListItem, MediaType } from '@/types';

type Props = {
  items: ListItem[];
  itemType: MediaType;
};

const { items, itemType } = Astro.props;

const uniqueYears = [
  ...new Set(items.filter((item) => item.year !== undefined).map((item) => item.year)),
].sort((a, b) => (b || 0) - (a || 0));

const STATUS_GAME = Object.values(Status);
---

<div class="mb-6">
  <div class="bg-[#655953] p-4 rounded-xl">
    <div class="flex flex-col md:flex-row gap-4">
      <div class="flex-1">
        <div class="relative">
          <input
            type="text"
            id="search-input"
            placeholder="Search..."
            class="w-full p-2 pl-9 bg-[#443b37] text-white border border-[#7d6e65] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#a77fc5]"
          />
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="absolute left-2.5 top-2.5 h-5 w-5 text-gray-[#7d6e65]"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
          </svg>
        </div>
      </div>

      <div class="flex-shrink-0">
        <div class="custom-select-wrapper" data-filter="status">
          <button
            class="select-button w-full p-2 bg-[#443b37] text-white border border-[#7d6e65] rounded-lg flex justify-between items-center focus:outline-none focus:ring-2 focus:ring-[#a77fc5] cursor-pointer"
            aria-haspopup="listbox"
            aria-expanded="false"
            aria-controls="status-listbox"
          >
            <span class="selected-value">All statuses</span>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="h-5 w-5 text-gray-400"
              viewBox="0 0 20 20"
              fill="currentColor"
            >
              <path
                fill-rule="evenodd"
                d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
                clip-rule="evenodd"></path>
            </svg>
          </button>
          <div
            class="options-container hidden absolute z-10 mt-1 w-full bg-[#443b37] border border-[#7d6e65] rounded-lg shadow-lg max-h-60 overflow-auto custom-scrollbar"
          >
            <ul class="py-1" id="status-listbox" aria-label="Status options">
              <li
                class="option cursor-pointer px-4 py-2 hover:bg-[#584c47] hover:text-[#a77fc5]"
                data-value=""
                tabindex="0"
                aria-label="All statuses"
                role="option"
                aria-selected="false"
              >
                All statuses
              </li>
              {
                STATUS_GAME.map((status) => (
                  <li
                    class="option cursor-pointer px-4 py-2 hover:bg-[#584c47] hover:text-[#a77fc5]"
                    data-value={status}
                    tabindex="0"
                    aria-label={status}
                    role="option"
                    aria-selected="false"
                  >
                    {status}
                  </li>
                ))
              }
            </ul>
          </div>
          <input type="hidden" id="status-filter" value="" />
        </div>
      </div>

      {
        uniqueYears.length > 0 && (
          <div class="flex-shrink-0">
            <div class="custom-select-wrapper" data-filter="year">
              <button
                class="select-button w-full p-2 bg-[#443b37] text-white border border-[#7d6e65] rounded-lg flex justify-between items-center focus:outline-none focus:ring-2 focus:ring-[#a77fc5] cursor-pointer"
                aria-haspopup="listbox"
                aria-expanded="false"
                aria-controls="year-listbox"
              >
                <span class="selected-value">All years</span>
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class="h-5 w-5 text-gray-400"
                  viewBox="0 0 20 20"
                  fill="currentColor"
                >
                  <path
                    fill-rule="evenodd"
                    d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
                    clip-rule="evenodd"
                  />
                </svg>
              </button>
              <div class="options-container hidden absolute z-10 mt-1 w-full bg-[#443b37] border border-[#7d6e65] rounded-lg shadow-lg max-h-60 overflow-auto custom-scrollbar">
                <ul class="py-1" id="year-listbox" aria-label="Year options">
                  <li
                    class="option cursor-pointer px-4 py-2 hover:bg-[#584c47] hover:text-[#a77fc5]"
                    data-value=""
                    tabindex="0"
                    aria-label="All years"
                    role="option"
                    aria-selected="false"
                  >
                    All years
                  </li>
                  {uniqueYears.map((year) => (
                    <li
                      class="option cursor-pointer px-4 py-2 hover:bg-[#584c47] hover:text-[#a77fc5]"
                      data-value={year}
                      tabindex="0"
                      aria-label={`Year ${year}`}
                      role="option"
                      aria-selected="false"
                    >
                      {year}
                    </li>
                  ))}
                </ul>
              </div>
              <input type="hidden" id="year-filter" value="" />
            </div>
          </div>
        )
      }

      {
        itemType === 'games' && (
          <div class="flex-shrink-0">
            <div class="custom-select-wrapper" data-filter="rating">
              <button
                class="select-button w-full p-2 bg-[#443b37] text-white border border-[#7d6e65] rounded-lg flex justify-between items-center focus:outline-none focus:ring-2 focus:ring-[#a77fc5] cursor-pointer"
                aria-haspopup="listbox"
                aria-expanded="false"
                aria-controls="rating-listbox"
              >
                <span class="selected-value">All ratings</span>
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class="h-5 w-5 text-gray-400"
                  viewBox="0 0 20 20"
                  fill="currentColor"
                >
                  <path
                    fill-rule="evenodd"
                    d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
                    clip-rule="evenodd"
                  />
                </svg>
              </button>
              <div class="options-container hidden absolute z-10 mt-1 w-full bg-component-secondary border border-component-primary-hover rounded-lg shadow-lg max-h-60 overflow-auto custom-scrollbar">
                <ul class="py-1" id="rating-listbox" aria-label="Rating options">
                  <li
                    class="option cursor-pointer px-4 py-2 hover:bg-component-primary hover:text-accent-secondary"
                    data-value=""
                    tabindex="0"
                    aria-label="All ratings"
                    role="option"
                    aria-selected="false"
                  >
                    All ratings
                  </li>
                  <li
                    class="option cursor-pointer px-4 py-2 hover:bg-component-primary hover:text-accent-secondary"
                    data-value="10"
                    tabindex="0"
                    aria-label="Rating 10 out of 10"
                    role="option"
                    aria-selected="false"
                  >
                    10/10
                  </li>
                  <li
                    class="option cursor-pointer px-4 py-2 hover:bg-component-primary hover:text-accent-secondary"
                    data-value="9"
                    tabindex="0"
                    aria-label="Rating 9 out of 10"
                    role="option"
                    aria-selected="false"
                  >
                    9/10
                  </li>
                  <li
                    class="option cursor-pointer px-4 py-2 hover:bg-component-primary hover:text-accent-secondary"
                    data-value="8"
                    tabindex="0"
                    aria-label="Rating 8 out of 10"
                    role="option"
                    aria-selected="false"
                  >
                    8/10
                  </li>
                  <li
                    class="option cursor-pointer px-4 py-2 hover:bg-component-primary hover:text-accent-secondary"
                    data-value="7"
                    tabindex="0"
                    aria-label="Rating 7 out of 10"
                    role="option"
                    aria-selected="false"
                  >
                    7/10
                  </li>
                  <li
                    class="option cursor-pointer px-4 py-2 hover:bg-component-primary hover:text-accent-secondary"
                    data-value="6"
                    tabindex="0"
                    aria-label="Rating 6 out of 10"
                    role="option"
                    aria-selected="false"
                  >
                    6/10
                  </li>
                  <li
                    class="option cursor-pointer px-4 py-2 hover:bg-component-primary hover:text-accent-secondary"
                    data-value="5"
                    tabindex="0"
                    aria-label="Rating 5 out of 10"
                    role="option"
                    aria-selected="false"
                  >
                    5/10
                  </li>
                  <li
                    class="option cursor-pointer px-4 py-2 hover:bg-component-primary hover:text-accent-secondary"
                    data-value="4"
                    tabindex="0"
                    aria-label="Rating 4 out of 10"
                    role="option"
                    aria-selected="false"
                  >
                    4/10
                  </li>
                  <li
                    class="option cursor-pointer px-4 py-2 hover:bg-component-primary hover:text-accent-secondary"
                    data-value="3"
                    tabindex="0"
                    aria-label="Rating 3 out of 10"
                    role="option"
                    aria-selected="false"
                  >
                    3/10
                  </li>
                  <li
                    class="option cursor-pointer px-4 py-2 hover:bg-component-primary hover:text-accent-secondary"
                    data-value="2"
                    tabindex="0"
                    aria-label="Rating 2 out of 10"
                    role="option"
                    aria-selected="false"
                  >
                    2/10
                  </li>
                  <li
                    class="option cursor-pointer px-4 py-2 hover:bg-component-primary hover:text-accent-secondary"
                    data-value="1"
                    tabindex="0"
                    aria-label="Rating 1 out of 10"
                    role="option"
                    aria-selected="false"
                  >
                    1/10
                  </li>
                </ul>
              </div>
              <input type="hidden" id="rating-filter" value="" />
            </div>
          </div>
        )
      }
    </div>
  </div>
</div>

<style>
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .card-item {
    transition: all 0.3s ease-in-out;
  }

  .options-container {
    transition: all 0.2s ease-in-out;
  }

  .custom-select-wrapper {
    position: relative;
    width: 100%;
    min-width: 150px;
  }

  .custom-scrollbar::-webkit-scrollbar {
    width: 8px;
  }

  .custom-scrollbar::-webkit-scrollbar-track {
    background: var(--color-component-secondary);
    border-radius: 0 6px 6px 0;
  }

  .custom-scrollbar::-webkit-scrollbar-thumb {
    background-color: var(--color-accent-primary);
    border-radius: 6px;
    border: 2px solid var(--color-component-secondary);
  }

  .custom-scrollbar::-webkit-scrollbar-thumb:hover {
    background-color: var(--color-accent-primary-hover);
  }
</style>

<script is:inline>
  function initFilters() {
    const customSelects = document.querySelectorAll('.custom-select-wrapper');
    const searchInput = document.getElementById('search-input');
    const statusFilter = document.getElementById('status-filter');
    const yearFilter = document.getElementById('year-filter');
    const ratingFilter = document.getElementById('rating-filter');
    const cardItems = document.querySelectorAll('.card-item');

    document.removeEventListener('click', closeAllDropdowns);

    function closeAllDropdowns() {
      customSelects.forEach((select) => {
        const container = select.querySelector('.options-container');
        if (container) container.classList.add('hidden');
      });
    }

    document.addEventListener('click', closeAllDropdowns);

    customSelects.forEach((select) => {
      const button = select.querySelector('.select-button');
      const optionsContainer = select.querySelector('.options-container');
      const options = select.querySelectorAll('.option');
      const hiddenInput = select.querySelector('input[type="hidden"]');
      const selectedValue = select.querySelector('.selected-value');

      if (!button || !optionsContainer || !hiddenInput || !selectedValue) return;

      button.removeEventListener('click', button.clickHandler);

      button.clickHandler = function (e) {
        e.stopPropagation();
        const isHidden = optionsContainer.classList.contains('hidden');

        customSelects.forEach((otherSelect) => {
          if (otherSelect !== select) {
            const container = otherSelect.querySelector('.options-container');
            if (container) container.classList.add('hidden');
          }
        });

        if (isHidden) {
          optionsContainer.classList.remove('hidden');
        } else {
          optionsContainer.classList.add('hidden');
        }
      };

      button.addEventListener('click', button.clickHandler);

      options.forEach((option) => {
        option.removeEventListener('click', option.clickHandler);

        option.clickHandler = function () {
          const value = option.getAttribute('data-value') || '';
          const text = option.textContent ? option.textContent.trim() : '';

          hiddenInput.value = value;
          selectedValue.textContent = text;
          optionsContainer.classList.add('hidden');

          filterItems();
        };

        option.addEventListener('click', option.clickHandler);
      });
    });

    function filterItems() {
      const searchTerm = searchInput?.value.toLowerCase() || '';
      const statusValue = statusFilter?.value || '';
      const yearValue = yearFilter?.value || '';
      const ratingValue = parseInt(ratingFilter?.value || '0');

      cardItems.forEach((item) => {
        const card = item;
        const title = card.dataset.title?.toLowerCase() || '';
        const status = card.dataset.status || '';
        const year = card.dataset.year || '';
        const rating = parseInt(card.dataset.rating || '0');

        const matchesSearch = title.includes(searchTerm);
        const matchesStatus = statusValue === '' || status === statusValue;
        const matchesYear = yearValue === '' || year === yearValue;
        const matchesRating = ratingValue === 0 || rating >= ratingValue;

        if (matchesSearch && matchesStatus && matchesYear && matchesRating) {
          card.style.display = 'block';
          card.style.animation = 'fadeIn 0.3s ease-in-out';
        } else {
          card.style.display = 'none';
        }
      });
    }

    if (searchInput) {
      searchInput.removeEventListener('input', searchInput.inputHandler);

      searchInput.inputHandler = function () {
        filterItems();
      };

      searchInput.addEventListener('input', searchInput.inputHandler);
    }
  }

  document.addEventListener('DOMContentLoaded', initFilters);

  document.addEventListener('astro:page-load', initFilters);
</script>
