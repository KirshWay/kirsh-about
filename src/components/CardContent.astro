---
import AudioBookIcon from '@assets/icons/audioBook.svg';
import BookIcon from '@assets/icons/book.svg';
import { Image } from 'astro:assets';

import { Status, Variant } from '@/types';
import { getUrl } from '@/utils';

import Ping from './Ping.astro';
import StarRating from './StarRating.astro';

import type { ListItem } from '@/types';
import type { ImageMetadata } from 'astro';

const { item, isAboveFold = false }: Props = Astro.props;

type Props = {
  item: ListItem;
  isAboveFold?: boolean;
};

const localImages = import.meta.glob<{ default: ImageMetadata }>(
  '/src/assets/images/**/*.{jpeg,jpg,png,gif,webp}'
);

const isLocalImage = item.image && item.image.startsWith('/src/assets/');

let imgSrcForStandardTag = item.image;

if (item.image && !isLocalImage && !item.image.startsWith('http')) {
  imgSrcForStandardTag = getUrl(item.image);
}

const getVariantByStatus = (status: Status): Variant => {
  switch (status) {
    case Status.COMPLETED:
      return Variant.GREEN;
    case Status.IN_PROGRESS:
      return Variant.YELLOW;
    default:
      return Variant.GRAY;
  }
};

const badgeVariant = getVariantByStatus(item.status);

let modalData = {};

if (item.review) {
  modalData = {
    title: item.title,
    year: item.year,
    review: item.review,
    recommendationEmoji: item.recommendationEmoji,
  };
}
---

<div
  class="bg-component-primary p-3 rounded-xl transition-all duration-200 ease-in-out hover:scale-103 hover:-translate-y-1 card-item"
  data-title={item.title}
  data-status={item.status}
  data-year={item.year?.toString()}
  data-rating={item.rating?.toString()}
>
  <div class="flex flex-col gap-2">
    {
      item.image && (
        <div class="aspect-[16/9] w-full overflow-hidden rounded-lg bg-component-dark">
          {isLocalImage ? (
            <Image
              src={localImages[item.image]()}
              alt={item.title}
              width={300}
              height={169}
              loading={isAboveFold ? 'eager' : 'lazy'}
              class="w-full h-full object-cover object-center hover:scale-105 transition-transform duration-300"
            />
          ) : (
            <img
              src={imgSrcForStandardTag}
              alt={item.title}
              width="300"
              height="169"
              loading={isAboveFold ? 'eager' : 'lazy'}
              class="w-full h-full object-cover object-center hover:scale-105 transition-transform duration-300"
            />
          )}
        </div>
      )
    }

    <div class="flex flex-col gap-2 py-4">
      <p class="text-md font-medium text-accent-secondary">{item.title}</p>

      {
        item.typeBook && (
          <p class="text-sm opacity-80 flex items-center">
            Type book:
            {item.typeBook === 'audiobook' ? (
              <AudioBookIcon class="w-5 h-5 text-accent-secondary" />
            ) : (
              <BookIcon class="w-5 h-5 text-accent-secondary" />
            )}
          </p>
        )
      }

      <div class="flex items-center gap-2">
        <Ping variant={badgeVariant} />
        <p class="text-sm opacity-80">{item.status}</p>
      </div>

      {item.year && <p class="text-sm opacity-80">Year released: {item.year}</p>}

      {item.rating && <StarRating rating={item.rating} />}

      {
        item.review && (
          <div>
            <p class="text-sm mt-1 line-clamp-2">{item.review}</p>
            {item.review.length > 45 && (
              <button
                class="text-xs mt-2 px-2 py-1 bg-component-dark hover:bg-hover-secondary rounded-md text-text-primary transition-colors cursor-pointer"
                data-modal-trigger
                data-modal-target="review-modal"
                data-modal-content={JSON.stringify(modalData)}
              >
                Read more
              </button>
            )}
          </div>
        )
      }

      {
        item.recommendationEmoji && (
          <div class="mt-4 text-right">
            <div class="modal-recommendation text-sm">{item.recommendationEmoji}</div>
          </div>
        )
      }
    </div>
  </div>
</div>
