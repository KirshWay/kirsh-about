---
import type { Variant } from "@/data";
type Props = {
  variant: Variant;
};

const { variant } = Astro.props;

const variantStyles: Record<
  Variant,
  { pingBgClass: string; dotBgClass: string }
> = {
  main: {
    pingBgClass: "bg-[#a77fc5]",
    dotBgClass: "bg-[#a77fc5]",
  },
  green: {
    pingBgClass: "bg-[#72bd85]",
    dotBgClass: "bg-[#72bd85]",
  },
  yellow: {
    pingBgClass: "bg-[#e9d75a]",
    dotBgClass: "bg-[#e9d75a]",
  },
  blue: {
    pingBgClass: "bg-[#3178C6]",
    dotBgClass: "bg-[#3178C6]",
  },
  lightBlue: {
    pingBgClass: "bg-[#5ebfff]",
    dotBgClass: "bg-[#5ebfff]",
  },
  lightGreen: {
    pingBgClass: "bg-[#38B2AC]",
    dotBgClass: "bg-[#38B2AC]",
  },
  black: {
    pingBgClass: "bg-[#000]",
    dotBgClass: "bg-[#000]",
  },
  pink: {
    pingBgClass: "bg-[#E10098]",
    dotBgClass: "bg-[#E10098]",
  },
  gray: {
    pingBgClass: "bg-gray-300",
    dotBgClass: "bg-gray-300",
  },
  red: {
    pingBgClass: "bg-[#E0234E]",
    dotBgClass: "bg-[#E0234E]",
  },
  orange: {
    pingBgClass: "bg-[#F05033]",
    dotBgClass: "bg-[#F05033]",
  },
};

const styles = variantStyles[variant];

const pingClasses = `animate-ping absolute inline-flex h-full w-full rounded-full ${styles.pingBgClass} opacity-75`;
const dotClasses = `relative inline-flex rounded-full h-2 w-2 ${styles.dotBgClass}`;
---

<span class="relative flex h-2 w-2">
  <span class={pingClasses}></span>
  <span class={dotClasses}></span>
</span>
